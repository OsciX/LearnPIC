

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Feb 26 17:24:50 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173                           
   174                           	psect	strings
   175  00CF                     __pstrings:
   176  00CF                     stringtab:
   177  00CF                     __stringtab:
   178  00CF                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181  00CF                     stringdir:
   182  00CF  3000               	movlw	high stringdir
   183  00D0  008A               	movwf	10
   184  00D1  0804               	movf	4,w
   185  00D2  0A84               	incf	4,f
   186  00D3  0782               	addwf	2,f
   187  00D4                     __stringbase:
   188  00D4  3400               	retlw	0
   189  00D5                     __end_of__stringtab:
   190  00D5                     writeDigit@nums:
   191  00D5  34C0               	retlw	192
   192  00D6  34F9               	retlw	249
   193  00D7  34A4               	retlw	164
   194  00D8  34B0               	retlw	176
   195  00D9  3499               	retlw	153
   196  00DA  3492               	retlw	146
   197  00DB  3482               	retlw	130
   198  00DC  34F8               	retlw	248
   199  00DD  3480               	retlw	128
   200  00DE  3498               	retlw	152
   201  00DF                     __end_ofwriteDigit@nums:
   202  0005                     _PORTAbits	set	5
   203  0008                     _PORTD	set	8
   204  0007                     _PORTCbits	set	7
   205  0001                     _TMR0	set	1
   206  000B                     _INTCONbits	set	11
   207  0088                     _TRISD	set	136
   208  0087                     _TRISCbits	set	135
   209  0085                     _TRISAbits	set	133
   210  0081                     _OPTION_REG	set	129
   211                           
   212                           	psect	cinit
   213  0011                     start_initialization:	
   214                           ; #config settings
   215                           
   216  0011                     __initialization:
   217                           
   218                           ; Clear objects allocated to COMMON
   219  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   220  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   221  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   222  0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   223                           
   224                           ; Clear objects allocated to BANK0
   225  0015  1283               	bcf	3,5	;RP0=0, select bank0
   226  0016  1303               	bcf	3,6	;RP1=0, select bank0
   227  0017  01A7               	clrf	__pbssBANK0& (0+127)
   228  0018  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   229  0019                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  0019                     __end_of__initialization:
   233  0019  0183               	clrf	3
   234  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMMON
   237  0076                     __pbssCOMMON:
   238  0076                     _update:
   239  0076                     	ds	2
   240  0078                     _currentDigit:
   241  0078                     	ds	2
   242                           
   243                           	psect	bssBANK0
   244  0027                     __pbssBANK0:
   245  0027                     _state:
   246  0027                     	ds	2
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:
   250  0070                     ?_timer_0:
   251  0070                     ??_timer_0:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 2 bytes @ 0x0
   259  0070                     	ds	3
   260  0073                     ?_writeDigit:
   261  0073                     writeDigit@value:	
   262                           ; 1 bytes @ 0x3
   263                           
   264                           
   265                           ; 1 bytes @ 0x3
   266  0073                     	ds	1
   267  0074                     ??_writeDigit:
   268                           
   269                           ; 1 bytes @ 0x4
   270  0074                     	ds	1
   271  0075                     writeDigit@digit:
   272                           
   273                           ; 1 bytes @ 0x5
   274  0075                     	ds	1
   275                           
   276                           	psect	cstackBANK0
   277  0020                     __pcstackBANK0:
   278  0020                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x0
   281  0020                     	ds	3
   282  0023                     main@j:
   283                           
   284                           ; 2 bytes @ 0x3
   285  0023                     	ds	2
   286  0025                     main@i:
   287                           
   288                           ; 2 bytes @ 0x5
   289  0025                     	ds	2
   290                           
   291                           	psect	maintext
   292  001D                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 44 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;  i               2    5[BANK0 ] int 
   303 ;;  j               2    3[BANK0 ] int 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  2   39[None  ] int 
   306 ;; Registers used:
   307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       4       0       0       0
   315 ;;      Temps:          0       3       0       0       0
   316 ;;      Totals:         0       7       0       0       0
   317 ;;Total ram usage:        7 bytes
   318 ;; Hardware stack levels required when called: 3
   319 ;; This function calls:
   320 ;;		_writeDigit
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326  001D                     _main:	
   327                           ;psect for function _main
   328                           
   329  001D                     l784:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   332                           
   333                           
   334                           ;main.c: 47:     INTCONbits.GIE = 1;
   335  001D  178B               	bsf	11,7	;volatile
   336                           
   337                           ;main.c: 48:     INTCONbits.PEIE = 1;
   338  001E  170B               	bsf	11,6	;volatile
   339                           
   340                           ;main.c: 49:     INTCONbits.TMR0IE = 1;
   341  001F  168B               	bsf	11,5	;volatile
   342  0020                     l786:
   343                           
   344                           ;main.c: 52:     OPTION_REG = 0x01;
   345  0020  3001               	movlw	1
   346  0021  1683               	bsf	3,5	;RP0=1, select bank1
   347  0022  1303               	bcf	3,6	;RP1=0, select bank1
   348  0023  0081               	movwf	1	;volatile
   349                           
   350                           ;main.c: 53:     TMR0 = 155;
   351  0024  309B               	movlw	155
   352  0025  1283               	bcf	3,5	;RP0=0, select bank0
   353  0026  1303               	bcf	3,6	;RP1=0, select bank0
   354  0027  0081               	movwf	1	;volatile
   355  0028                     l788:
   356                           
   357                           ;main.c: 55:     TRISAbits.TRISA3 = 0x00;
   358  0028  1683               	bsf	3,5	;RP0=1, select bank1
   359  0029  1303               	bcf	3,6	;RP1=0, select bank1
   360  002A  1185               	bcf	5,3	;volatile
   361  002B                     l790:
   362                           
   363                           ;main.c: 56:     TRISCbits.TRISC3 = 0x00;
   364  002B  1187               	bcf	7,3	;volatile
   365  002C                     l792:
   366                           
   367                           ;main.c: 57:     TRISCbits.TRISC4 = 0x00;
   368  002C  1207               	bcf	7,4	;volatile
   369  002D                     l794:
   370                           
   371                           ;main.c: 58:     TRISCbits.TRISC5 = 0x00;
   372  002D  1287               	bcf	7,5	;volatile
   373  002E                     l796:
   374                           
   375                           ;main.c: 59:     TRISD = 0x0;
   376  002E  0188               	clrf	8	;volatile
   377  002F                     l798:
   378                           
   379                           ;main.c: 63:     PORTCbits.RC5 = 1;
   380  002F  1283               	bcf	3,5	;RP0=0, select bank0
   381  0030  1303               	bcf	3,6	;RP1=0, select bank0
   382  0031  1687               	bsf	7,5	;volatile
   383  0032                     l800:
   384                           
   385                           ;main.c: 64:     PORTD = 0xFF;
   386  0032  30FF               	movlw	255
   387  0033  0088               	movwf	8	;volatile
   388  0034                     l802:
   389                           
   390                           ;main.c: 65:     PORTCbits.RC5 = 0;
   391  0034  1287               	bcf	7,5	;volatile
   392  0035                     l804:
   393                           
   394                           ;main.c: 68:     PORTCbits.RC4 = 1;
   395  0035  1607               	bsf	7,4	;volatile
   396  0036                     l806:
   397                           
   398                           ;main.c: 70:     PORTD = 0xF0;
   399  0036  30F0               	movlw	240
   400  0037  0088               	movwf	8	;volatile
   401  0038                     l808:
   402                           
   403                           ;main.c: 72:     PORTCbits.RC4 = 0;
   404  0038  1207               	bcf	7,4	;volatile
   405  0039                     l810:
   406                           
   407                           ;main.c: 75:     PORTAbits.RA3 = 0;
   408  0039  1185               	bcf	5,3	;volatile
   409  003A                     l812:
   410                           
   411                           ;main.c: 78:         for(int j = 0; j<4; j++) {
   412  003A  1283               	bcf	3,5	;RP0=0, select bank0
   413  003B  1303               	bcf	3,6	;RP1=0, select bank0
   414  003C  01A3               	clrf	main@j
   415  003D  01A4               	clrf	main@j+1
   416  003E                     l818:
   417                           
   418                           ;main.c: 79:         for(int i = 0; i<10; i++) {
   419  003E  1283               	bcf	3,5	;RP0=0, select bank0
   420  003F  1303               	bcf	3,6	;RP1=0, select bank0
   421  0040  01A5               	clrf	main@i
   422  0041  01A6               	clrf	main@i+1
   423  0042                     l824:
   424                           
   425                           ;main.c: 80:             writeDigit(j,i);
   426  0042  1283               	bcf	3,5	;RP0=0, select bank0
   427  0043  1303               	bcf	3,6	;RP1=0, select bank0
   428  0044  0825               	movf	main@i,w
   429  0045  00A0               	movwf	??_main
   430  0046  0820               	movf	??_main,w
   431  0047  00F3               	movwf	writeDigit@value
   432  0048  0823               	movf	main@j,w
   433  0049  120A  118A  20B1  120A  118A  	fcall	_writeDigit
   434  004E                     l826:
   435                           
   436                           ;main.c: 81:             _delay((unsigned long)((500)*(4000000/4000.0)));
   437  004E  3003               	movlw	3
   438  004F  1283               	bcf	3,5	;RP0=0, select bank0
   439  0050  1303               	bcf	3,6	;RP1=0, select bank0
   440  0051  00A2               	movwf	??_main+2
   441  0052  308A               	movlw	138
   442  0053  00A1               	movwf	??_main+1
   443  0054  3055               	movlw	85
   444  0055  00A0               	movwf	??_main
   445  0056                     u117:
   446  0056  0BA0               	decfsz	??_main,f
   447  0057  2856               	goto	u117
   448  0058  0BA1               	decfsz	??_main+1,f
   449  0059  2856               	goto	u117
   450  005A  0BA2               	decfsz	??_main+2,f
   451  005B  2856               	goto	u117
   452  005C                     l828:
   453                           
   454                           ;main.c: 82:         }
   455  005C  3001               	movlw	1
   456  005D  1283               	bcf	3,5	;RP0=0, select bank0
   457  005E  1303               	bcf	3,6	;RP1=0, select bank0
   458  005F  07A5               	addwf	main@i,f
   459  0060  1803               	skipnc
   460  0061  0AA6               	incf	main@i+1,f
   461  0062  3000               	movlw	0
   462  0063  07A6               	addwf	main@i+1,f
   463  0064                     l830:
   464  0064  0826               	movf	main@i+1,w
   465  0065  3A80               	xorlw	128
   466  0066  00FF               	movwf	btemp+1
   467  0067  3080               	movlw	128
   468  0068  027F               	subwf	btemp+1,w
   469  0069  1D03               	skipz
   470  006A  286D               	goto	u95
   471  006B  300A               	movlw	10
   472  006C  0225               	subwf	main@i,w
   473  006D                     u95:
   474  006D  1C03               	skipc
   475  006E  2870               	goto	u91
   476  006F  2871               	goto	u90
   477  0070                     u91:
   478  0070  2842               	goto	l824
   479  0071                     u90:
   480  0071                     l832:
   481                           
   482                           ;main.c: 83:         }
   483  0071  3001               	movlw	1
   484  0072  1283               	bcf	3,5	;RP0=0, select bank0
   485  0073  1303               	bcf	3,6	;RP1=0, select bank0
   486  0074  07A3               	addwf	main@j,f
   487  0075  1803               	skipnc
   488  0076  0AA4               	incf	main@j+1,f
   489  0077  3000               	movlw	0
   490  0078  07A4               	addwf	main@j+1,f
   491  0079                     l834:
   492  0079  0824               	movf	main@j+1,w
   493  007A  3A80               	xorlw	128
   494  007B  00FF               	movwf	btemp+1
   495  007C  3080               	movlw	128
   496  007D  027F               	subwf	btemp+1,w
   497  007E  1D03               	skipz
   498  007F  2882               	goto	u105
   499  0080  3004               	movlw	4
   500  0081  0223               	subwf	main@j,w
   501  0082                     u105:
   502  0082  1C03               	skipc
   503  0083  2885               	goto	u101
   504  0084  2886               	goto	u100
   505  0085                     u101:
   506  0085  283E               	goto	l818
   507  0086                     u100:
   508  0086  283A               	goto	l812
   509  0087  120A  118A  280E   	ljmp	start
   510  008A                     __end_of_main:
   511                           
   512                           	psect	text1
   513  00B1                     __ptext1:	
   514 ;; *************** function _writeDigit *****************
   515 ;; Defined at:
   516 ;;		line 91 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  digit           1    wreg     unsigned char 
   519 ;;  value           1    3[COMMON] unsigned char 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  digit           1    5[COMMON] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         1       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0
   533 ;;      Temps:          1       0       0       0       0
   534 ;;      Totals:         3       0       0       0       0
   535 ;;Total ram usage:        3 bytes
   536 ;; Hardware stack levels used: 2
   537 ;; Hardware stack levels required when called: 1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545  00B1                     _writeDigit:	
   546                           ;psect for function _writeDigit
   547                           
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _writeDigit: [wreg-fsr0h+status,2+status,0+pclath]
   551                           ;writeDigit@digit stored from wreg
   552  00B1  00F5               	movwf	writeDigit@digit
   553  00B2                     l720:
   554                           
   555                           ;main.c: 93:     const uint8_t nums[10] = {;main.c: 107:     PORTCbits.RC4 = 1;
   556  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   557  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   558  00B4  1607               	bsf	7,4	;volatile
   559  00B5                     l722:
   560                           
   561                           ;main.c: 109:     PORTD = 0b1 << (4+digit);
   562  00B5  3001               	movlw	1
   563  00B6  00F4               	movwf	??_writeDigit
   564  00B7  0875               	movf	writeDigit@digit,w
   565  00B8  3E04               	addlw	4
   566  00B9  3E01               	addlw	1
   567  00BA  28BD               	goto	u64
   568  00BB                     u65:
   569  00BB  1003               	clrc
   570  00BC  0DF4               	rlf	??_writeDigit,f
   571  00BD                     u64:
   572  00BD  3EFF               	addlw	-1
   573  00BE  1D03               	skipz
   574  00BF  28BB               	goto	u65
   575  00C0  0874               	movf	??_writeDigit,w
   576  00C1  0088               	movwf	8	;volatile
   577  00C2                     l724:
   578                           
   579                           ;main.c: 111:     PORTCbits.RC4 = 0;
   580  00C2  1207               	bcf	7,4	;volatile
   581  00C3                     l726:
   582                           
   583                           ;main.c: 114:     PORTCbits.RC3 = 1;
   584  00C3  1587               	bsf	7,3	;volatile
   585  00C4                     l728:
   586                           
   587                           ;main.c: 115:     PORTD = nums[value];
   588  00C4  0873               	movf	writeDigit@value,w
   589  00C5  3E01               	addlw	low ((writeDigit@nums-__stringbase)| (0+32768))
   590  00C6  0084               	movwf	4
   591  00C7  120A  118A  20CF  120A  118A  	fcall	stringdir
   592  00CC  0088               	movwf	8	;volatile
   593  00CD                     l730:
   594                           
   595                           ;main.c: 117:     PORTCbits.RC3 = 0;
   596  00CD  1187               	bcf	7,3	;volatile
   597  00CE                     l52:
   598  00CE  0008               	return
   599  00CF                     __end_of_writeDigit:
   600                           
   601                           	psect	text2
   602  008A                     __ptext2:	
   603 ;; *************** function _timer_0 *****************
   604 ;; Defined at:
   605 ;;		line 31 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, btemp+1
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          3       0       0       0       0
   622 ;;      Totals:         3       0       0       0       0
   623 ;;Total ram usage:        3 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		Interrupt level 1
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632  008A                     _timer_0:	
   633                           ;psect for function _timer_0
   634                           
   635  008A                     i1l656:
   636                           
   637                           ;main.c: 32:     if (INTCONbits.TMR0IF == 1) {
   638  008A  1D0B               	btfss	11,2	;volatile
   639  008B  288D               	goto	u2_21
   640  008C  288E               	goto	u2_20
   641  008D                     u2_21:
   642  008D  28A8               	goto	i1l35
   643  008E                     u2_20:
   644  008E                     i1l658:
   645                           
   646                           ;main.c: 33:         currentDigit++;
   647  008E  3001               	movlw	1
   648  008F  07F8               	addwf	_currentDigit,f
   649  0090  1803               	skipnc
   650  0091  0AF9               	incf	_currentDigit+1,f
   651  0092  3000               	movlw	0
   652  0093  07F9               	addwf	_currentDigit+1,f
   653  0094                     i1l660:
   654                           
   655                           ;main.c: 34:         if (currentDigit > 3) {
   656  0094  0879               	movf	_currentDigit+1,w
   657  0095  3A80               	xorlw	128
   658  0096  00FF               	movwf	btemp+1
   659  0097  3080               	movlw	128
   660  0098  027F               	subwf	btemp+1,w
   661  0099  1D03               	skipz
   662  009A  289D               	goto	u3_25
   663  009B  3004               	movlw	4
   664  009C  0278               	subwf	_currentDigit,w
   665  009D                     u3_25:
   666  009D  1C03               	skipc
   667  009E  28A0               	goto	u3_21
   668  009F  28A1               	goto	u3_20
   669  00A0                     u3_21:
   670  00A0  28A3               	goto	i1l664
   671  00A1                     u3_20:
   672  00A1                     i1l662:
   673                           
   674                           ;main.c: 35:             currentDigit = 0;
   675  00A1  01F8               	clrf	_currentDigit
   676  00A2  01F9               	clrf	_currentDigit+1
   677  00A3                     i1l664:
   678                           
   679                           ;main.c: 38:         update = 1;
   680  00A3  3001               	movlw	1
   681  00A4  00F6               	movwf	_update
   682  00A5  3000               	movlw	0
   683  00A6  00F7               	movwf	_update+1
   684  00A7                     i1l666:
   685                           
   686                           ;main.c: 39:         INTCONbits.TMR0IF = 0;
   687  00A7  110B               	bcf	11,2	;volatile
   688  00A8                     i1l35:
   689  00A8  0872               	movf	??_timer_0+2,w
   690  00A9  00FF               	movwf	btemp+1
   691  00AA  0871               	movf	??_timer_0+1,w
   692  00AB  008A               	movwf	10
   693  00AC  0E70               	swapf	??_timer_0,w
   694  00AD  0083               	movwf	3
   695  00AE  0EFE               	swapf	btemp,f
   696  00AF  0E7E               	swapf	btemp,w
   697  00B0  0009               	retfie
   698  00B1                     __end_of_timer_0:
   699  007E                     btemp	set	126	;btemp
   700  007E                     wtemp0	set	126
   701                           
   702                           	psect	intentry
   703  0004                     __pintentry:	
   704                           ;incstack = 0
   705                           ; Regs used in _timer_0: [wreg+status,2+btemp+1]
   706                           
   707  0004                     interrupt_function:
   708  007E                     saved_w	set	btemp
   709  0004  00FE               	movwf	btemp
   710  0005  0E03               	swapf	3,w
   711  0006  00F0               	movwf	??_timer_0
   712  0007  080A               	movf	10,w
   713  0008  00F1               	movwf	??_timer_0+1
   714  0009  087F               	movf	btemp+1,w
   715  000A  00F2               	movwf	??_timer_0+2
   716  000B  120A  118A  288A   	ljmp	_timer_0
   717                           
   718                           	psect	idloc
   719                           
   720                           ;Config register IDLOC0 @ 0x2000
   721                           ;	unspecified, using default values
   722  2000                     	org	8192
   723  2000  3FFF               	dw	16383
   724                           
   725                           ;Config register IDLOC1 @ 0x2001
   726                           ;	unspecified, using default values
   727  2001                     	org	8193
   728  2001  3FFF               	dw	16383
   729                           
   730                           ;Config register IDLOC2 @ 0x2002
   731                           ;	unspecified, using default values
   732  2002                     	org	8194
   733  2002  3FFF               	dw	16383
   734                           
   735                           ;Config register IDLOC3 @ 0x2003
   736                           ;	unspecified, using default values
   737  2003                     	org	8195
   738  2003  3FFF               	dw	16383
   739                           
   740                           	psect	config
   741                           
   742                           ;Config register CONFIG @ 0x2007
   743                           ;	Oscillator Selection bits
   744                           ;	FOSC = XT, XT oscillator
   745                           ;	Watchdog Timer Enable bit
   746                           ;	WDTE = OFF, WDT disabled
   747                           ;	Power-up Timer Enable bit
   748                           ;	PWRTE = ON, PWRT enabled
   749                           ;	Brown-out Reset Enable bit
   750                           ;	BOREN = ON, BOR enabled
   751                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   752                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   753                           ;	Data EEPROM Memory Code Protection bit
   754                           ;	CPD = OFF, Data EEPROM code protection off
   755                           ;	Flash Program Memory Write Enable bits
   756                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   757                           ;	In-Circuit Debugger Mode bit
   758                           ;	DEBUG = 0x1, unprogrammed default
   759                           ;	Flash Program Memory Code Protection bit
   760                           ;	CP = OFF, Code protection off
   761  2007                     	org	8199
   762  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      7       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writeDigit

Critical Paths under _timer_0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     318
                                              0 BANK0      7     7      0
                         _writeDigit
 ---------------------------------------------------------------------------------
 (2) _writeDigit                                           3     2      1     120
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _timer_0                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _writeDigit

 _timer_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Feb 26 17:24:50 2023

                      pc 0002                       l52 00CE                       u64 00BD  
                     u65 00BB                       u90 0071                       u91 0070  
                     u95 006D                       fsr 0004                      l720 00B2  
                    l800 0032                      l730 00CD                      l722 00B5  
                    l810 0039                      l802 0034                      l724 00C2  
                    l812 003A                      l804 0035                      l726 00C3  
                    l830 0064                      l806 0036                      l728 00C4  
                    l832 0071                      l824 0042                      l808 0038  
                    l834 0079                      l826 004E                      l818 003E  
                    l828 005C                      l790 002B                      l792 002C  
                    l784 001D                      l794 002D                      l786 0020  
                    l796 002E                      l788 0028                      l798 002F  
                    u100 0086                      u101 0085                      u105 0082  
                    u117 0056                      fsr0 0004                     i1l35 00A8  
                   _TMR0 0001                     u2_20 008E                     u2_21 008D  
                   u3_20 00A1                     u3_21 00A0                     u3_25 009D  
                   _main 001D                     btemp 007E                     start 000E  
                  ?_main 0070                    i1l660 0094                    i1l662 00A1  
                  i1l664 00A3                    i1l656 008A                    i1l666 00A7  
                  i1l658 008E                    _PORTD 0008                    _TRISD 0088  
                  _state 0027                    main@i 0025                    main@j 0023  
                  pclath 000A          __end_of_timer_0 00B1                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 008A  
                 ??_main 0020                   _update 0076                   saved_w 007E  
              ??_timer_0 0070  __end_of__initialization 0019           __pcstackCOMMON 0070  
             __pbssBANK0 0027               __pmaintext 001D               __pintentry 0004  
             __stringtab 00CF                  __ptext1 00B1                  __ptext2 008A  
                _timer_0 008A     end_of_initialization 0019                _PORTAbits 0005  
              _PORTCbits 0007                _TRISAbits 0085                _TRISCbits 0087  
             _writeDigit 00B1      start_initialization 0011              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020             _currentDigit 0078  
            ?_writeDigit 0073                __pstrings 00CF                 ?_timer_0 0070  
      interrupt_function 0004          writeDigit@digit 0075          writeDigit@value 0073  
            __stringbase 00D4       __end_of__stringtab 00D5           writeDigit@nums 00D5  
             _INTCONbits 000B                 intlevel1 0000                stringcode 00CF  
 __end_ofwriteDigit@nums 00DF             ??_writeDigit 0074               _OPTION_REG 0081  
               stringdir 00CF                 stringtab 00CF       __end_of_writeDigit 00CF  
