

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Feb 26 19:19:34 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175                           
   176                           	psect	strings
   177  01E1                     __pstrings:
   178  01E1                     stringtab:
   179  01E1                     __stringtab:
   180  01E1                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183  01E1                     stringdir:
   184  01E1  3001               	movlw	high stringdir
   185  01E2  008A               	movwf	10
   186  01E3  0804               	movf	4,w
   187  01E4  0A84               	incf	4,f
   188  01E5  0782               	addwf	2,f
   189  01E6                     __stringbase:
   190  01E6  3400               	retlw	0
   191  01E7                     __end_of__stringtab:
   192  01E7                     writeDigit@nums:
   193  01E7  34C0               	retlw	192
   194  01E8  34F9               	retlw	249
   195  01E9  34A4               	retlw	164
   196  01EA  34B0               	retlw	176
   197  01EB  3499               	retlw	153
   198  01EC  3492               	retlw	146
   199  01ED  3482               	retlw	130
   200  01EE  34F8               	retlw	248
   201  01EF  3480               	retlw	128
   202  01F0  3498               	retlw	152
   203  01F1                     __end_ofwriteDigit@nums:
   204  0005                     _PORTAbits	set	5
   205  0008                     _PORTD	set	8
   206  0007                     _PORTCbits	set	7
   207  0001                     _TMR0	set	1
   208  0006                     _PORTBbits	set	6
   209  000B                     _INTCONbits	set	11
   210  0088                     _TRISD	set	136
   211  0087                     _TRISCbits	set	135
   212  0086                     _TRISBbits	set	134
   213  0085                     _TRISAbits	set	133
   214  0081                     _OPTION_REG	set	129
   215                           
   216                           	psect	cinit
   217  000F                     start_initialization:	
   218                           ; #config settings
   219                           
   220  000F                     __initialization:
   221                           
   222                           ; Clear objects allocated to BANK0
   223  000F  1283               	bcf	3,5	;RP0=0, select bank0
   224  0010  1303               	bcf	3,6	;RP1=0, select bank0
   225  0011  01B7               	clrf	__pbssBANK0& (0+127)
   226  0012  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   227  0013  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   228  0014  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   229  0015  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   230  0016  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   231  0017  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   232  0018  01BE               	clrf	(__pbssBANK0+7)& (0+127)
   233  0019  01BF               	clrf	(__pbssBANK0+8)& (0+127)
   234  001A                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  001A                     __end_of__initialization:
   238  001A  0183               	clrf	3
   239  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssBANK0
   242  0037                     __pbssBANK0:
   243  0037                     main@F943:
   244  0037                     	ds	4
   245  003B                     _tcount:
   246  003B                     	ds	4
   247  003F                     _diag:
   248  003F                     	ds	1
   249                           
   250                           	psect	cstackCOMMON
   251  0070                     __pcstackCOMMON:
   252  0070                     ?_setup:
   253  0070                     ?_timer_0:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_timer_0:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 2 bytes @ 0x0
   264  0070                     	ds	3
   265  0073                     ??_setup:
   266  0073                     ?_writeDigit:	
   267                           ; 1 bytes @ 0x3
   268                           
   269  0073                     ?___lwdiv:	
   270                           ; 1 bytes @ 0x3
   271                           
   272  0073                     ?___lwmod:	
   273                           ; 2 bytes @ 0x3
   274                           
   275  0073                     writeDigit@value:	
   276                           ; 2 bytes @ 0x3
   277                           
   278  0073                     ___lwdiv@divisor:	
   279                           ; 1 bytes @ 0x3
   280                           
   281  0073                     ___lwmod@divisor:	
   282                           ; 2 bytes @ 0x3
   283                           
   284                           
   285                           ; 2 bytes @ 0x3
   286  0073                     	ds	1
   287  0074                     ??_writeDigit:
   288                           
   289                           ; 1 bytes @ 0x4
   290  0074                     	ds	1
   291  0075                     writeDigit@digit:
   292  0075                     ___lwdiv@dividend:	
   293                           ; 1 bytes @ 0x5
   294                           
   295  0075                     ___lwmod@dividend:	
   296                           ; 2 bytes @ 0x5
   297                           
   298                           
   299                           ; 2 bytes @ 0x5
   300  0075                     	ds	2
   301  0077                     ??___lwdiv:
   302  0077                     ??___lwmod:	
   303                           ; 1 bytes @ 0x7
   304                           
   305                           
   306                           ; 1 bytes @ 0x7
   307  0077                     	ds	1
   308  0078                     ___lwmod@counter:
   309  0078                     ___lwdiv@quotient:	
   310                           ; 1 bytes @ 0x8
   311                           
   312                           
   313                           ; 2 bytes @ 0x8
   314  0078                     	ds	2
   315  007A                     ___lwdiv@counter:
   316                           
   317                           ; 1 bytes @ 0xA
   318  007A                     	ds	1
   319                           
   320                           	psect	cstackBANK0
   321  0020                     __pcstackBANK0:
   322  0020                     ??_main:
   323                           
   324                           ; 1 bytes @ 0x0
   325  0020                     	ds	8
   326  0028                     main@places:
   327                           
   328                           ; 4 bytes @ 0x8
   329  0028                     	ds	4
   330  002C                     main@pcount:
   331                           
   332                           ; 4 bytes @ 0xC
   333  002C                     	ds	4
   334  0030                     main@disp:
   335                           
   336                           ; 2 bytes @ 0x10
   337  0030                     	ds	2
   338  0032                     main@cal:
   339                           
   340                           ; 2 bytes @ 0x12
   341  0032                     	ds	2
   342  0034                     main@i:
   343                           
   344                           ; 2 bytes @ 0x14
   345  0034                     	ds	2
   346  0036                     main@ldu:
   347                           
   348                           ; 1 bytes @ 0x16
   349  0036                     	ds	1
   350                           
   351                           	psect	maintext
   352  001E                     __pmaintext:	
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 40 in file "main.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  i               2   20[BANK0 ] int 
   363 ;;  places          4    8[BANK0 ] unsigned char [4]
   364 ;;  pcount          4   12[BANK0 ] unsigned long 
   365 ;;  cal             2   18[BANK0 ] unsigned int 
   366 ;;  disp            2   16[BANK0 ] unsigned int 
   367 ;;  ldu             1   22[BANK0 ] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  2   40[None  ] int 
   370 ;; Registers used:
   371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : B00/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0      15       0       0       0
   379 ;;      Temps:          0       8       0       0       0
   380 ;;      Totals:         0      23       0       0       0
   381 ;;Total ram usage:       23 bytes
   382 ;; Hardware stack levels required when called: 3
   383 ;; This function calls:
   384 ;;		___lwdiv
   385 ;;		___lwmod
   386 ;;		_setup
   387 ;;		_writeDigit
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393  001E                     _main:	
   394                           ;psect for function _main
   395                           
   396  001E                     l888:	
   397                           ;incstack = 0
   398                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   399                           
   400                           
   401                           ;main.c: 41:     setup();
   402  001E  120A  118A  21C2  120A  118A  	fcall	_setup
   403  0023                     l890:
   404                           
   405                           ;main.c: 43:     uint8_t places[4] = {0,0,0,0};
   406  0023  3000               	movlw	0
   407  0024  1283               	bcf	3,5	;RP0=0, select bank0
   408  0025  1303               	bcf	3,6	;RP1=0, select bank0
   409  0026  00AB               	movwf	main@places+3
   410  0027  3000               	movlw	0
   411  0028  00AA               	movwf	main@places+2
   412  0029  3000               	movlw	0
   413  002A  00A9               	movwf	main@places+1
   414  002B  3000               	movlw	0
   415  002C  00A8               	movwf	main@places
   416  002D                     l892:
   417                           
   418                           ;main.c: 45:     uint16_t disp = 0;
   419  002D  01B0               	clrf	main@disp
   420  002E  01B1               	clrf	main@disp+1
   421  002F                     l894:
   422  002F                     l896:
   423                           
   424                           ;main.c: 47:     uint8_t ldu = 0;
   425  002F  01B6               	clrf	main@ldu
   426  0030                     l898:
   427                           
   428                           ;main.c: 48:     uint32_t pcount = tcount;
   429  0030  083E               	movf	_tcount+3,w
   430  0031  00AF               	movwf	main@pcount+3
   431  0032  083D               	movf	_tcount+2,w
   432  0033  00AE               	movwf	main@pcount+2
   433  0034  083C               	movf	_tcount+1,w
   434  0035  00AD               	movwf	main@pcount+1
   435  0036  083B               	movf	_tcount,w
   436  0037  00AC               	movwf	main@pcount
   437  0038                     l900:
   438                           
   439                           ;main.c: 52:         if (ldu != tcount%4) {
   440  0038  3003               	movlw	3
   441  0039  053B               	andwf	_tcount,w
   442  003A  00A0               	movwf	??_main
   443  003B  3000               	movlw	0
   444  003C  053C               	andwf	_tcount+1,w
   445  003D  00A1               	movwf	??_main+1
   446  003E  3000               	movlw	0
   447  003F  053D               	andwf	_tcount+2,w
   448  0040  00A2               	movwf	??_main+2
   449  0041  3000               	movlw	0
   450  0042  053E               	andwf	_tcount+3,w
   451  0043  00A3               	movwf	??_main+3
   452  0044  0836               	movf	main@ldu,w
   453  0045  00A4               	movwf	??_main+4
   454  0046  01A5               	clrf	??_main+5
   455  0047  01A6               	clrf	??_main+6
   456  0048  01A7               	clrf	??_main+7
   457  0049  0823               	movf	??_main+3,w
   458  004A  0627               	xorwf	??_main+7,w
   459  004B  1D03               	skipz
   460  004C  2857               	goto	u395
   461  004D  0822               	movf	??_main+2,w
   462  004E  0626               	xorwf	??_main+6,w
   463  004F  1D03               	skipz
   464  0050  2857               	goto	u395
   465  0051  0821               	movf	??_main+1,w
   466  0052  0625               	xorwf	??_main+5,w
   467  0053  1D03               	skipz
   468  0054  2857               	goto	u395
   469  0055  0820               	movf	??_main,w
   470  0056  0624               	xorwf	??_main+4,w
   471  0057                     u395:
   472  0057  1903               	skipnz
   473  0058  285A               	goto	u391
   474  0059  285B               	goto	u390
   475  005A                     u391:
   476  005A  2838               	goto	l900
   477  005B                     u390:
   478  005B                     l902:
   479                           
   480                           ;main.c: 54:             ldu = tcount%4;
   481  005B  083B               	movf	_tcount,w
   482  005C  3903               	andlw	3
   483  005D  00A0               	movwf	??_main
   484  005E  0820               	movf	??_main,w
   485  005F  00B6               	movwf	main@ldu
   486  0060                     l904:
   487                           
   488                           ;main.c: 55:             writeDigit(ldu, places[ldu]);
   489  0060  0836               	movf	main@ldu,w
   490  0061  3E28               	addlw	(low (main@places| 0))& (0+255)
   491  0062  0084               	movwf	4
   492  0063  1383               	bcf	3,7	;select IRP bank0
   493  0064  0800               	movf	0,w
   494  0065  00A0               	movwf	??_main
   495  0066  0820               	movf	??_main,w
   496  0067  00F3               	movwf	writeDigit@value
   497  0068  0836               	movf	main@ldu,w
   498  0069  120A  118A  21A2  120A  118A  	fcall	_writeDigit
   499  006E                     l906:
   500                           
   501                           ;main.c: 58:             if (tcount - pcount >= 1000) {
   502  006E  1283               	bcf	3,5	;RP0=0, select bank0
   503  006F  1303               	bcf	3,6	;RP1=0, select bank0
   504  0070  083B               	movf	_tcount,w
   505  0071  00A0               	movwf	??_main
   506  0072  083C               	movf	_tcount+1,w
   507  0073  00A1               	movwf	??_main+1
   508  0074  083D               	movf	_tcount+2,w
   509  0075  00A2               	movwf	??_main+2
   510  0076  083E               	movf	_tcount+3,w
   511  0077  00A3               	movwf	??_main+3
   512  0078  082C               	movf	main@pcount,w
   513  0079  02A0               	subwf	??_main,f
   514  007A  082D               	movf	main@pcount+1,w
   515  007B  1C03               	skipc
   516  007C  0F2D               	incfsz	main@pcount+1,w
   517  007D  287F               	goto	u401
   518  007E  2880               	goto	u402
   519  007F                     u401:
   520  007F  02A1               	subwf	??_main+1,f
   521  0080                     u402:
   522  0080  082E               	movf	main@pcount+2,w
   523  0081  1C03               	skipc
   524  0082  0F2E               	incfsz	main@pcount+2,w
   525  0083  2885               	goto	u403
   526  0084  2886               	goto	u404
   527  0085                     u403:
   528  0085  02A2               	subwf	??_main+2,f
   529  0086                     u404:
   530  0086  082F               	movf	main@pcount+3,w
   531  0087  1C03               	skipc
   532  0088  0F2F               	incfsz	main@pcount+3,w
   533  0089  288B               	goto	u405
   534  008A  288C               	goto	u406
   535  008B                     u405:
   536  008B  02A3               	subwf	??_main+3,f
   537  008C                     u406:
   538  008C  0823               	movf	??_main+3,w
   539  008D  1D03               	btfss	3,2
   540  008E  289E               	goto	u410
   541  008F  0822               	movf	??_main+2,w
   542  0090  1D03               	btfss	3,2
   543  0091  289E               	goto	u410
   544  0092  3003               	movlw	3
   545  0093  0221               	subwf	??_main+1,w
   546  0094  1D03               	skipz
   547  0095  289A               	goto	u413
   548  0096  30E8               	movlw	232
   549  0097  0220               	subwf	??_main,w
   550  0098  1D03               	skipz
   551  0099  289A               	goto	u413
   552  009A                     u413:
   553  009A  1C03               	btfss	3,0
   554  009B  289D               	goto	u411
   555  009C  289E               	goto	u410
   556  009D                     u411:
   557  009D  28F3               	goto	l924
   558  009E                     u410:
   559  009E                     l908:
   560                           
   561                           ;main.c: 59:                 pcount = tcount;
   562  009E  1283               	bcf	3,5	;RP0=0, select bank0
   563  009F  1303               	bcf	3,6	;RP1=0, select bank0
   564  00A0  083E               	movf	_tcount+3,w
   565  00A1  00AF               	movwf	main@pcount+3
   566  00A2  083D               	movf	_tcount+2,w
   567  00A3  00AE               	movwf	main@pcount+2
   568  00A4  083C               	movf	_tcount+1,w
   569  00A5  00AD               	movwf	main@pcount+1
   570  00A6  083B               	movf	_tcount,w
   571  00A7  00AC               	movwf	main@pcount
   572                           
   573                           ;main.c: 60:                 disp++;
   574  00A8  3001               	movlw	1
   575  00A9  07B0               	addwf	main@disp,f
   576  00AA  1803               	skipnc
   577  00AB  0AB1               	incf	main@disp+1,f
   578  00AC  3000               	movlw	0
   579  00AD  07B1               	addwf	main@disp+1,f
   580                           
   581                           ;main.c: 62:                 cal = disp;
   582  00AE  0831               	movf	main@disp+1,w
   583  00AF  00B3               	movwf	main@cal+1
   584  00B0  0830               	movf	main@disp,w
   585  00B1  00B2               	movwf	main@cal
   586  00B2                     l910:
   587                           
   588                           ;main.c: 63:                 for (int i = 0; i < 4; i++) {
   589  00B2  01B4               	clrf	main@i
   590  00B3  01B5               	clrf	main@i+1
   591  00B4                     l916:
   592                           
   593                           ;main.c: 64:                     places[i] = cal % 10;
   594  00B4  300A               	movlw	10
   595  00B5  00F3               	movwf	___lwmod@divisor
   596  00B6  3000               	movlw	0
   597  00B7  00F4               	movwf	___lwmod@divisor+1
   598  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   599  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   600  00BA  0833               	movf	main@cal+1,w
   601  00BB  00F6               	movwf	___lwmod@dividend+1
   602  00BC  0832               	movf	main@cal,w
   603  00BD  00F5               	movwf	___lwmod@dividend
   604  00BE  120A  118A  2142  120A  118A  	fcall	___lwmod
   605  00C3  0873               	movf	?___lwmod,w
   606  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   607  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   608  00C6  00A0               	movwf	??_main
   609  00C7  0834               	movf	main@i,w
   610  00C8  3E28               	addlw	(low (main@places| 0))& (0+255)
   611  00C9  0084               	movwf	4
   612  00CA  0820               	movf	??_main,w
   613  00CB  1383               	bcf	3,7	;select IRP bank0
   614  00CC  0080               	movwf	0
   615  00CD                     l918:
   616                           
   617                           ;main.c: 65:                     cal /= 10;
   618  00CD  300A               	movlw	10
   619  00CE  00F3               	movwf	___lwdiv@divisor
   620  00CF  3000               	movlw	0
   621  00D0  00F4               	movwf	___lwdiv@divisor+1
   622  00D1  0833               	movf	main@cal+1,w
   623  00D2  00F6               	movwf	___lwdiv@dividend+1
   624  00D3  0832               	movf	main@cal,w
   625  00D4  00F5               	movwf	___lwdiv@dividend
   626  00D5  120A  118A  20FE  120A  118A  	fcall	___lwdiv
   627  00DA  0874               	movf	?___lwdiv+1,w
   628  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   629  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   630  00DD  00B3               	movwf	main@cal+1
   631  00DE  0873               	movf	?___lwdiv,w
   632  00DF  00B2               	movwf	main@cal
   633  00E0                     l920:
   634                           
   635                           ;main.c: 66:                 }
   636  00E0  3001               	movlw	1
   637  00E1  07B4               	addwf	main@i,f
   638  00E2  1803               	skipnc
   639  00E3  0AB5               	incf	main@i+1,f
   640  00E4  3000               	movlw	0
   641  00E5  07B5               	addwf	main@i+1,f
   642  00E6                     l922:
   643  00E6  0835               	movf	main@i+1,w
   644  00E7  3A80               	xorlw	128
   645  00E8  00FF               	movwf	btemp+1
   646  00E9  3080               	movlw	128
   647  00EA  027F               	subwf	btemp+1,w
   648  00EB  1D03               	skipz
   649  00EC  28EF               	goto	u425
   650  00ED  3004               	movlw	4
   651  00EE  0234               	subwf	main@i,w
   652  00EF                     u425:
   653  00EF  1C03               	skipc
   654  00F0  28F2               	goto	u421
   655  00F1  28F3               	goto	u420
   656  00F2                     u421:
   657  00F2  28B4               	goto	l916
   658  00F3                     u420:
   659  00F3                     l924:
   660                           
   661                           ;main.c: 69:             PORTBbits.RB7 = diag;
   662  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   663  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   664  00F5  0C3F               	rrf	_diag,w
   665  00F6  1C03               	skipc
   666  00F7  1386               	bcf	6,7	;volatile
   667  00F8  1803               	skipnc
   668  00F9  1786               	bsf	6,7	;volatile
   669  00FA  2838               	goto	l900
   670  00FB  120A  118A  280C   	ljmp	start
   671  00FE                     __end_of_main:
   672                           
   673                           	psect	text1
   674  01A2                     __ptext1:	
   675 ;; *************** function _writeDigit *****************
   676 ;; Defined at:
   677 ;;		line 118 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  digit           1    wreg     unsigned char 
   680 ;;  value           1    3[COMMON] unsigned char 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  digit           1    5[COMMON] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         1       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0
   694 ;;      Temps:          1       0       0       0       0
   695 ;;      Totals:         3       0       0       0       0
   696 ;;Total ram usage:        3 bytes
   697 ;; Hardware stack levels used: 2
   698 ;; Hardware stack levels required when called: 1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706  01A2                     _writeDigit:	
   707                           ;psect for function _writeDigit
   708                           
   709                           
   710                           ;incstack = 0
   711                           ; Regs used in _writeDigit: [wreg-fsr0h+status,2+status,0+pclath]
   712                           ;writeDigit@digit stored from wreg
   713  01A2  00F5               	movwf	writeDigit@digit
   714  01A3                     l818:
   715                           
   716                           ;main.c: 121:     const uint8_t nums[10] = {;main.c: 136:     PORTAbits.RA3 = 1;
   717  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   718  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   719  01A5  1585               	bsf	5,3	;volatile
   720                           
   721                           ;main.c: 139:     PORTCbits.RC4 = 1;
   722  01A6  1607               	bsf	7,4	;volatile
   723  01A7                     l820:
   724                           
   725                           ;main.c: 141:     PORTD = 0b1 << (4+digit);
   726  01A7  3001               	movlw	1
   727  01A8  00F4               	movwf	??_writeDigit
   728  01A9  0875               	movf	writeDigit@digit,w
   729  01AA  3E04               	addlw	4
   730  01AB  3E01               	addlw	1
   731  01AC  29AF               	goto	u224
   732  01AD                     u225:
   733  01AD  1003               	clrc
   734  01AE  0DF4               	rlf	??_writeDigit,f
   735  01AF                     u224:
   736  01AF  3EFF               	addlw	-1
   737  01B0  1D03               	skipz
   738  01B1  29AD               	goto	u225
   739  01B2  0874               	movf	??_writeDigit,w
   740  01B3  0088               	movwf	8	;volatile
   741  01B4                     l822:
   742                           
   743                           ;main.c: 143:     PORTCbits.RC4 = 0;
   744  01B4  1207               	bcf	7,4	;volatile
   745  01B5                     l824:
   746                           
   747                           ;main.c: 146:     PORTCbits.RC3 = 1;
   748  01B5  1587               	bsf	7,3	;volatile
   749  01B6                     l826:
   750                           
   751                           ;main.c: 147:     PORTD = nums[value];
   752  01B6  0873               	movf	writeDigit@value,w
   753  01B7  3E01               	addlw	low ((writeDigit@nums-__stringbase)| (0+32768))
   754  01B8  0084               	movwf	4
   755  01B9  120A  118A  21E1  120A  118A  	fcall	stringdir
   756  01BE  0088               	movwf	8	;volatile
   757  01BF                     l828:
   758                           
   759                           ;main.c: 149:     PORTCbits.RC3 = 0;
   760  01BF  1187               	bcf	7,3	;volatile
   761  01C0                     l830:
   762                           
   763                           ;main.c: 152:     PORTAbits.RA3 = 0;
   764  01C0  1185               	bcf	5,3	;volatile
   765  01C1                     l58:
   766  01C1  0008               	return
   767  01C2                     __end_of_writeDigit:
   768                           
   769                           	psect	text2
   770  01C2                     __ptext2:	
   771 ;; *************** function _setup *****************
   772 ;; Defined at:
   773 ;;		line 77 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801  01C2                     _setup:	
   802                           ;psect for function _setup
   803                           
   804  01C2                     l788:	
   805                           ;incstack = 0
   806                           ; Regs used in _setup: [wreg+status,2]
   807                           
   808                           
   809                           ;main.c: 79:     INTCONbits.GIE = 1;
   810  01C2  178B               	bsf	11,7	;volatile
   811                           
   812                           ;main.c: 80:     INTCONbits.PEIE = 1;
   813  01C3  170B               	bsf	11,6	;volatile
   814                           
   815                           ;main.c: 81:     INTCONbits.TMR0IE = 1;
   816  01C4  168B               	bsf	11,5	;volatile
   817  01C5                     l790:
   818                           
   819                           ;main.c: 84:     OPTION_REG = 0x01;
   820  01C5  3001               	movlw	1
   821  01C6  1683               	bsf	3,5	;RP0=1, select bank1
   822  01C7  1303               	bcf	3,6	;RP1=0, select bank1
   823  01C8  0081               	movwf	1	;volatile
   824                           
   825                           ;main.c: 85:     TMR0 = 155;
   826  01C9  309B               	movlw	155
   827  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   828  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   829  01CC  0081               	movwf	1	;volatile
   830  01CD                     l792:
   831                           
   832                           ;main.c: 87:     TRISAbits.TRISA3 = 0;
   833  01CD  1683               	bsf	3,5	;RP0=1, select bank1
   834  01CE  1303               	bcf	3,6	;RP1=0, select bank1
   835  01CF  1185               	bcf	5,3	;volatile
   836  01D0                     l794:
   837                           
   838                           ;main.c: 88:     TRISBbits.TRISB7 = 0;
   839  01D0  1386               	bcf	6,7	;volatile
   840  01D1                     l796:
   841                           
   842                           ;main.c: 89:     TRISCbits.TRISC3 = 0;
   843  01D1  1187               	bcf	7,3	;volatile
   844  01D2                     l798:
   845                           
   846                           ;main.c: 90:     TRISCbits.TRISC4 = 0;
   847  01D2  1207               	bcf	7,4	;volatile
   848  01D3                     l800:
   849                           
   850                           ;main.c: 91:     TRISCbits.TRISC5 = 0;
   851  01D3  1287               	bcf	7,5	;volatile
   852  01D4                     l802:
   853                           
   854                           ;main.c: 92:     TRISD = 0x00;
   855  01D4  0188               	clrf	8	;volatile
   856  01D5                     l804:
   857                           
   858                           ;main.c: 96:     PORTCbits.RC5 = 1;
   859  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   860  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   861  01D7  1687               	bsf	7,5	;volatile
   862  01D8                     l806:
   863                           
   864                           ;main.c: 97:     PORTD = 0xFF;
   865  01D8  30FF               	movlw	255
   866  01D9  0088               	movwf	8	;volatile
   867  01DA                     l808:
   868                           
   869                           ;main.c: 98:     PORTCbits.RC5 = 0;
   870  01DA  1287               	bcf	7,5	;volatile
   871  01DB                     l810:
   872                           
   873                           ;main.c: 101:     PORTCbits.RC4 = 1;
   874  01DB  1607               	bsf	7,4	;volatile
   875  01DC                     l812:
   876                           
   877                           ;main.c: 103:     PORTD = 0xF0;
   878  01DC  30F0               	movlw	240
   879  01DD  0088               	movwf	8	;volatile
   880  01DE                     l814:
   881                           
   882                           ;main.c: 105:     PORTCbits.RC4 = 0;
   883  01DE  1207               	bcf	7,4	;volatile
   884  01DF                     l816:
   885                           
   886                           ;main.c: 108:     PORTAbits.RA3 = 0;
   887  01DF  1185               	bcf	5,3	;volatile
   888  01E0                     l53:
   889  01E0  0008               	return
   890  01E1                     __end_of_setup:
   891                           
   892                           	psect	text3
   893  0142                     __ptext3:	
   894 ;; *************** function ___lwmod *****************
   895 ;; Defined at:
   896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  divisor         2    3[COMMON] unsigned int 
   899 ;;  dividend        2    5[COMMON] unsigned int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  counter         1    8[COMMON] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2    3[COMMON] unsigned int 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         4       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0
   913 ;;      Temps:          1       0       0       0       0
   914 ;;      Totals:         6       0       0       0       0
   915 ;;Total ram usage:        6 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925  0142                     ___lwmod:	
   926                           ;psect for function ___lwmod
   927                           
   928  0142                     l858:	
   929                           ;incstack = 0
   930                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   931                           
   932  0142  0873               	movf	___lwmod@divisor,w
   933  0143  0474               	iorwf	___lwmod@divisor+1,w
   934  0144  1903               	btfsc	3,2
   935  0145  2947               	goto	u301
   936  0146  2948               	goto	u300
   937  0147                     u301:
   938  0147  2977               	goto	l876
   939  0148                     u300:
   940  0148                     l860:
   941  0148  01F8               	clrf	___lwmod@counter
   942  0149  0AF8               	incf	___lwmod@counter,f
   943  014A  2956               	goto	l866
   944  014B                     l862:
   945  014B  3001               	movlw	1
   946  014C                     u315:
   947  014C  1003               	clrc
   948  014D  0DF3               	rlf	___lwmod@divisor,f
   949  014E  0DF4               	rlf	___lwmod@divisor+1,f
   950  014F  3EFF               	addlw	-1
   951  0150  1D03               	skipz
   952  0151  294C               	goto	u315
   953  0152                     l864:
   954  0152  3001               	movlw	1
   955  0153  00F7               	movwf	??___lwmod
   956  0154  0877               	movf	??___lwmod,w
   957  0155  07F8               	addwf	___lwmod@counter,f
   958  0156                     l866:
   959  0156  1FF4               	btfss	___lwmod@divisor+1,7
   960  0157  2959               	goto	u321
   961  0158  295A               	goto	u320
   962  0159                     u321:
   963  0159  294B               	goto	l862
   964  015A                     u320:
   965  015A                     l868:
   966  015A  0874               	movf	___lwmod@divisor+1,w
   967  015B  0276               	subwf	___lwmod@dividend+1,w
   968  015C  1D03               	skipz
   969  015D  2960               	goto	u335
   970  015E  0873               	movf	___lwmod@divisor,w
   971  015F  0275               	subwf	___lwmod@dividend,w
   972  0160                     u335:
   973  0160  1C03               	skipc
   974  0161  2963               	goto	u331
   975  0162  2964               	goto	u330
   976  0163                     u331:
   977  0163  296A               	goto	l872
   978  0164                     u330:
   979  0164                     l870:
   980  0164  0873               	movf	___lwmod@divisor,w
   981  0165  02F5               	subwf	___lwmod@dividend,f
   982  0166  0874               	movf	___lwmod@divisor+1,w
   983  0167  1C03               	skipc
   984  0168  03F6               	decf	___lwmod@dividend+1,f
   985  0169  02F6               	subwf	___lwmod@dividend+1,f
   986  016A                     l872:
   987  016A  3001               	movlw	1
   988  016B                     u345:
   989  016B  1003               	clrc
   990  016C  0CF4               	rrf	___lwmod@divisor+1,f
   991  016D  0CF3               	rrf	___lwmod@divisor,f
   992  016E  3EFF               	addlw	-1
   993  016F  1D03               	skipz
   994  0170  296B               	goto	u345
   995  0171                     l874:
   996  0171  3001               	movlw	1
   997  0172  02F8               	subwf	___lwmod@counter,f
   998  0173  1D03               	btfss	3,2
   999  0174  2976               	goto	u351
  1000  0175  2977               	goto	u350
  1001  0176                     u351:
  1002  0176  295A               	goto	l868
  1003  0177                     u350:
  1004  0177                     l876:
  1005  0177  0876               	movf	___lwmod@dividend+1,w
  1006  0178  00F4               	movwf	?___lwmod+1
  1007  0179  0875               	movf	___lwmod@dividend,w
  1008  017A  00F3               	movwf	?___lwmod
  1009  017B                     l426:
  1010  017B  0008               	return
  1011  017C                     __end_of___lwmod:
  1012                           
  1013                           	psect	text4
  1014  00FE                     __ptext4:	
  1015 ;; *************** function ___lwdiv *****************
  1016 ;; Defined at:
  1017 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  divisor         2    3[COMMON] unsigned int 
  1020 ;;  dividend        2    5[COMMON] unsigned int 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  quotient        2    8[COMMON] unsigned int 
  1023 ;;  counter         1   10[COMMON] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  2    3[COMMON] unsigned int 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         4       0       0       0       0
  1034 ;;      Locals:         3       0       0       0       0
  1035 ;;      Temps:          1       0       0       0       0
  1036 ;;      Totals:         8       0       0       0       0
  1037 ;;Total ram usage:        8 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047  00FE                     ___lwdiv:	
  1048                           ;psect for function ___lwdiv
  1049                           
  1050  00FE                     l832:	
  1051                           ;incstack = 0
  1052                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1053                           
  1054  00FE  01F8               	clrf	___lwdiv@quotient
  1055  00FF  01F9               	clrf	___lwdiv@quotient+1
  1056  0100                     l834:
  1057  0100  0873               	movf	___lwdiv@divisor,w
  1058  0101  0474               	iorwf	___lwdiv@divisor+1,w
  1059  0102  1903               	btfsc	3,2
  1060  0103  2905               	goto	u231
  1061  0104  2906               	goto	u230
  1062  0105                     u231:
  1063  0105  293D               	goto	l854
  1064  0106                     u230:
  1065  0106                     l836:
  1066  0106  01FA               	clrf	___lwdiv@counter
  1067  0107  0AFA               	incf	___lwdiv@counter,f
  1068  0108  2914               	goto	l842
  1069  0109                     l838:
  1070  0109  3001               	movlw	1
  1071  010A                     u245:
  1072  010A  1003               	clrc
  1073  010B  0DF3               	rlf	___lwdiv@divisor,f
  1074  010C  0DF4               	rlf	___lwdiv@divisor+1,f
  1075  010D  3EFF               	addlw	-1
  1076  010E  1D03               	skipz
  1077  010F  290A               	goto	u245
  1078  0110                     l840:
  1079  0110  3001               	movlw	1
  1080  0111  00F7               	movwf	??___lwdiv
  1081  0112  0877               	movf	??___lwdiv,w
  1082  0113  07FA               	addwf	___lwdiv@counter,f
  1083  0114                     l842:
  1084  0114  1FF4               	btfss	___lwdiv@divisor+1,7
  1085  0115  2917               	goto	u251
  1086  0116  2918               	goto	u250
  1087  0117                     u251:
  1088  0117  2909               	goto	l838
  1089  0118                     u250:
  1090  0118                     l844:
  1091  0118  3001               	movlw	1
  1092  0119                     u265:
  1093  0119  1003               	clrc
  1094  011A  0DF8               	rlf	___lwdiv@quotient,f
  1095  011B  0DF9               	rlf	___lwdiv@quotient+1,f
  1096  011C  3EFF               	addlw	-1
  1097  011D  1D03               	skipz
  1098  011E  2919               	goto	u265
  1099  011F  0874               	movf	___lwdiv@divisor+1,w
  1100  0120  0276               	subwf	___lwdiv@dividend+1,w
  1101  0121  1D03               	skipz
  1102  0122  2925               	goto	u275
  1103  0123  0873               	movf	___lwdiv@divisor,w
  1104  0124  0275               	subwf	___lwdiv@dividend,w
  1105  0125                     u275:
  1106  0125  1C03               	skipc
  1107  0126  2928               	goto	u271
  1108  0127  2929               	goto	u270
  1109  0128                     u271:
  1110  0128  2930               	goto	l850
  1111  0129                     u270:
  1112  0129                     l846:
  1113  0129  0873               	movf	___lwdiv@divisor,w
  1114  012A  02F5               	subwf	___lwdiv@dividend,f
  1115  012B  0874               	movf	___lwdiv@divisor+1,w
  1116  012C  1C03               	skipc
  1117  012D  03F6               	decf	___lwdiv@dividend+1,f
  1118  012E  02F6               	subwf	___lwdiv@dividend+1,f
  1119  012F                     l848:
  1120  012F  1478               	bsf	___lwdiv@quotient,0
  1121  0130                     l850:
  1122  0130  3001               	movlw	1
  1123  0131                     u285:
  1124  0131  1003               	clrc
  1125  0132  0CF4               	rrf	___lwdiv@divisor+1,f
  1126  0133  0CF3               	rrf	___lwdiv@divisor,f
  1127  0134  3EFF               	addlw	-1
  1128  0135  1D03               	skipz
  1129  0136  2931               	goto	u285
  1130  0137                     l852:
  1131  0137  3001               	movlw	1
  1132  0138  02FA               	subwf	___lwdiv@counter,f
  1133  0139  1D03               	btfss	3,2
  1134  013A  293C               	goto	u291
  1135  013B  293D               	goto	u290
  1136  013C                     u291:
  1137  013C  2918               	goto	l844
  1138  013D                     u290:
  1139  013D                     l854:
  1140  013D  0879               	movf	___lwdiv@quotient+1,w
  1141  013E  00F4               	movwf	?___lwdiv+1
  1142  013F  0878               	movf	___lwdiv@quotient,w
  1143  0140  00F3               	movwf	?___lwdiv
  1144  0141                     l416:
  1145  0141  0008               	return
  1146  0142                     __end_of___lwdiv:
  1147                           
  1148                           	psect	text5
  1149  017C                     __ptext5:	
  1150 ;; *************** function _timer_0 *****************
  1151 ;; Defined at:
  1152 ;;		line 31 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          3       0       0       0       0
  1169 ;;      Totals:         3       0       0       0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		Interrupt level 1
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179  017C                     _timer_0:	
  1180                           ;psect for function _timer_0
  1181                           
  1182  017C                     i1l880:
  1183                           
  1184                           ;main.c: 32:     if (INTCONbits.TMR0IF == 1) {
  1185  017C  1D0B               	btfss	11,2	;volatile
  1186  017D  297F               	goto	u36_21
  1187  017E  2980               	goto	u36_20
  1188  017F                     u36_21:
  1189  017F  299B               	goto	i1l36
  1190  0180                     u36_20:
  1191  0180                     i1l882:
  1192                           
  1193                           ;main.c: 33:         tcount++;
  1194  0180  3001               	movlw	1
  1195  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0183  07BB               	addwf	_tcount,f
  1198  0184  3000               	movlw	0
  1199  0185  1803               	skipnc
  1200  0186  3001               	movlw	1
  1201  0187  07BC               	addwf	_tcount+1,f
  1202  0188  3000               	movlw	0
  1203  0189  1803               	skipnc
  1204  018A  3001               	movlw	1
  1205  018B  07BD               	addwf	_tcount+2,f
  1206  018C  3000               	movlw	0
  1207  018D  1803               	skipnc
  1208  018E  3001               	movlw	1
  1209  018F  07BE               	addwf	_tcount+3,f
  1210  0190                     i1l884:
  1211                           
  1212                           ;main.c: 34:         diag = !diag;
  1213  0190  083F               	movf	_diag,w
  1214  0191  1903               	btfsc	3,2
  1215  0192  2994               	goto	u37_21
  1216  0193  2996               	goto	u37_20
  1217  0194                     u37_21:
  1218  0194  3001               	movlw	1
  1219  0195  2997               	goto	u38_20
  1220  0196                     u37_20:
  1221  0196  3000               	movlw	0
  1222  0197                     u38_20:
  1223  0197  00F0               	movwf	??_timer_0
  1224  0198  0870               	movf	??_timer_0,w
  1225  0199  00BF               	movwf	_diag
  1226  019A                     i1l886:
  1227                           
  1228                           ;main.c: 35:         INTCONbits.TMR0IF = 0;
  1229  019A  110B               	bcf	11,2	;volatile
  1230  019B                     i1l36:
  1231  019B  0872               	movf	??_timer_0+2,w
  1232  019C  008A               	movwf	10
  1233  019D  0E71               	swapf	??_timer_0+1,w
  1234  019E  0083               	movwf	3
  1235  019F  0EFE               	swapf	btemp,f
  1236  01A0  0E7E               	swapf	btemp,w
  1237  01A1  0009               	retfie
  1238  01A2                     __end_of_timer_0:
  1239  007E                     btemp	set	126	;btemp
  1240  007E                     wtemp0	set	126
  1241                           
  1242                           	psect	intentry
  1243  0004                     __pintentry:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _timer_0: [wreg+status,2+status,0]
  1246                           
  1247  0004                     interrupt_function:
  1248  007E                     saved_w	set	btemp
  1249  0004  00FE               	movwf	btemp
  1250  0005  0E03               	swapf	3,w
  1251  0006  00F1               	movwf	??_timer_0+1
  1252  0007  080A               	movf	10,w
  1253  0008  00F2               	movwf	??_timer_0+2
  1254  0009  120A  118A  297C   	ljmp	_timer_0
  1255                           
  1256                           	psect	idloc
  1257                           
  1258                           ;Config register IDLOC0 @ 0x2000
  1259                           ;	unspecified, using default values
  1260  2000                     	org	8192
  1261  2000  3FFF               	dw	16383
  1262                           
  1263                           ;Config register IDLOC1 @ 0x2001
  1264                           ;	unspecified, using default values
  1265  2001                     	org	8193
  1266  2001  3FFF               	dw	16383
  1267                           
  1268                           ;Config register IDLOC2 @ 0x2002
  1269                           ;	unspecified, using default values
  1270  2002                     	org	8194
  1271  2002  3FFF               	dw	16383
  1272                           
  1273                           ;Config register IDLOC3 @ 0x2003
  1274                           ;	unspecified, using default values
  1275  2003                     	org	8195
  1276  2003  3FFF               	dw	16383
  1277                           
  1278                           	psect	config
  1279                           
  1280                           ;Config register CONFIG @ 0x2007
  1281                           ;	Oscillator Selection bits
  1282                           ;	FOSC = XT, XT oscillator
  1283                           ;	Watchdog Timer Enable bit
  1284                           ;	WDTE = OFF, WDT disabled
  1285                           ;	Power-up Timer Enable bit
  1286                           ;	PWRTE = ON, PWRT enabled
  1287                           ;	Brown-out Reset Enable bit
  1288                           ;	BOREN = ON, BOR enabled
  1289                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1290                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1291                           ;	Data EEPROM Memory Code Protection bit
  1292                           ;	CPD = OFF, Data EEPROM code protection off
  1293                           ;	Flash Program Memory Write Enable bits
  1294                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1295                           ;	In-Circuit Debugger Mode bit
  1296                           ;	DEBUG = 0x1, unprogrammed default
  1297                           ;	Flash Program Memory Code Protection bit
  1298                           ;	CP = OFF, Code protection off
  1299  2007                     	org	8199
  1300  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     23      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv

Critical Paths under _timer_0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    1024
                                              0 BANK0     23    23      0
                            ___lwdiv
                            ___lwmod
                              _setup
                         _writeDigit
 ---------------------------------------------------------------------------------
 (2) _writeDigit                                           3     2      1     120
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     311
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              3 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _timer_0                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
   _setup
   _writeDigit

 _timer_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Feb 26 19:19:34 2023

                      pc 0002                       l53 01E0                       l58 01C1  
                     fsr 0004                      l416 0141                      l426 017B  
                    l800 01D3                      l810 01DB                      l802 01D4  
                    l812 01DC                      l804 01D5                      l820 01A7  
                    l900 0038                      l814 01DE                      l806 01D8  
                    l830 01C0                      l822 01B4                      l910 00B2  
                    l902 005B                      l840 0110                      l832 00FE  
                    l816 01DF                      l808 01DA                      l824 01B5  
                    l920 00E0                      l904 0060                      l850 0130  
                    l842 0114                      l834 0100                      l826 01B6  
                    l818 01A3                      l922 00E6                      l906 006E  
                    l852 0137                      l844 0118                      l836 0106  
                    l860 0148                      l828 01BF                      l916 00B4  
                    l908 009E                      l924 00F3                      l846 0129  
                    l838 0109                      l854 013D                      l870 0164  
                    l862 014B                      l790 01C5                      l918 00CD  
                    l848 012F                      l872 016A                      l864 0152  
                    l792 01CD                      l874 0171                      l866 0156  
                    l858 0142                      l794 01D0                      l890 0023  
                    l868 015A                      l876 0177                      l796 01D1  
                    l788 01C2                      l892 002D                      l798 01D2  
                    l894 002F                      l896 002F                      l888 001E  
                    l898 0030                      u300 0148                      u301 0147  
                    u230 0106                      u231 0105                      u320 015A  
                    u224 01AF                      u321 0159                      u225 01AD  
                    u401 007F                      u250 0118                      u330 0164  
                    u410 009E                      u402 0080                      u251 0117  
                    u331 0163                      u315 014C                      u411 009D  
                    u403 0085                      u420 00F3                      u404 0086  
                    u245 010A                      u421 00F2                      u413 009A  
                    u405 008B                      u270 0129                      u350 0177  
                    u406 008C                      u271 0128                      u351 0176  
                    u335 0160                      u265 0119                      u345 016B  
                    u425 00EF                      u290 013D                      u291 013C  
                    u275 0125                      u285 0131                      u390 005B  
                    u391 005A                      u395 0057                      fsr0 0004  
                    indf 0000                     i1l36 019B                     _TMR0 0001  
                   _diag 003F                     _main 001E                     btemp 007E  
                   start 000C                    ?_main 0070          __end_of___lwdiv 0142  
        __end_of___lwmod 017C                    i1l880 017C                    i1l882 0180  
                  i1l884 0190                    i1l886 019A                    _PORTD 0008  
                  u36_20 0180                    u36_21 017F                    u37_20 0196  
                  u37_21 0194                    u38_20 0197                    _TRISD 0088  
                  _setup 01C2                    main@i 0034                    pclath 000A  
        __end_of_timer_0 01A2                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00FE                   ??_main 0020  
                 ?_setup 0070                ??___lwdiv 0077                ??___lwmod 0077  
                 _tcount 003B                   saved_w 007E                ??_timer_0 0070  
__end_of__initialization 001A           __pcstackCOMMON 0070            __end_of_setup 01E1  
                ??_setup 0073               __pbssBANK0 0037               __pmaintext 001E  
             __pintentry 0004               __stringtab 01E1                  ___lwdiv 00FE  
                ___lwmod 0142                  __ptext1 01A2                  __ptext2 01C2  
                __ptext3 0142                  __ptext4 00FE                  __ptext5 017C  
                _timer_0 017C                  main@cal 0032                  main@ldu 0036  
   end_of_initialization 001A                _PORTAbits 0005                _PORTBbits 0006  
              _PORTCbits 0007                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087               main@places 0028               main@pcount 002C  
             _writeDigit 01A2      start_initialization 000F                ___latbits 0002  
          __pcstackBANK0 0020         ___lwdiv@dividend 0075              ?_writeDigit 0073  
               ?___lwdiv 0073                 ?___lwmod 0073                __pstrings 01E1  
               ?_timer_0 0070         ___lwdiv@quotient 0078        interrupt_function 0004  
        writeDigit@digit 0075          writeDigit@value 0073              __stringbase 01E6  
     __end_of__stringtab 01E7          ___lwdiv@divisor 0073          ___lwdiv@counter 007A  
               main@F943 0037           writeDigit@nums 01E7                 main@disp 0030  
             _INTCONbits 000B                 intlevel1 0000         ___lwmod@dividend 0075  
              stringcode 01E1   __end_ofwriteDigit@nums 01F1             ??_writeDigit 0074  
             _OPTION_REG 0081          ___lwmod@divisor 0073          ___lwmod@counter 0078  
               stringdir 01E1                 stringtab 01E1       __end_of_writeDigit 01C2  
